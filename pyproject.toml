[project]
name = "mcp-todoist"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server for integrating Claude with Todoist"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
keywords = ["mcp", "model context protocol", "claude", "todoist", "task management"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "mcp>=1.4.0",
    "pydantic>=2.0.0",
    "todoist-api-python>=2.1.0",  # Official Todoist REST API Python SDK
    "aiohttp>=3.8.0",              # For async HTTP requests
    "python-dotenv>=1.0.0",        # For environment variables management
    "rich>=13.0.0",                # For better console output
]

[[project.authors]]
name = "Your Name"
email = "your.email@example.com"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
mcp-todoist = "mcp_todoist:main"

[tool.ruff]
target-version = "py311"
line-length = 100
select = ["E", "F", "I", "W", "N", "UP", "ASYNC"]
ignore = []

[tool.ruff.isort]
known-first-party = ["mcp_todoist"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
